// Code generated by protoc-gen-go. DO NOT EDIT.
// source: code.xxxxxx.com/micro/proto/post/post.proto

/*
Package post is a generated protocol buffer package.

It is generated from these files:
	code.xxxxxx.com/micro/proto/post/post.proto

It has these top-level messages:
	Attachment
	Tag
	Record
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	DeleteRequest
	DeleteResponse
	ListRequest
	ListResponse
	StatsRequest
	StatsResponse
*/
package post

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Attachment struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *Attachment) Reset()                    { *m = Attachment{} }
func (m *Attachment) String() string            { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()               {}
func (*Attachment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Attachment) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Tag struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Record struct {
	Id          int64         `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId      int64         `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,string,omitempty"`
	CategoryId  int64         `protobuf:"varint,3,opt,name=category_id,json=categoryId" json:"category_id,string,omitempty"`
	Title       string        `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Content     string        `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	CoverUrl    string        `protobuf:"bytes,6,opt,name=cover_url,json=coverUrl" json:"cover_url,omitempty"`
	CreatedAt   string        `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Tags        []*Tag        `protobuf:"bytes,8,rep,name=tags" json:"tags,omitempty"`
	Attachments []*Attachment `protobuf:"bytes,9,rep,name=attachments" json:"attachments,omitempty"`
	Permission  string        `protobuf:"bytes,10,opt,name=permission" json:"permission,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Record) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Record) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Record) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *Record) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Record) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Record) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *Record) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Record) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Record) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *Record) GetPermission() string {
	if m != nil {
		return m.Permission
	}
	return ""
}

type CreateRequest struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReadResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type DeleteRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListRequest struct {
	Limit      int64  `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset     int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	UserId     int64  `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CategoryId int64  `protobuf:"varint,4,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Tag        string `protobuf:"bytes,5,opt,name=tag" json:"tag,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ListRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ListRequest) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *ListRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type ListResponse struct {
	Total   int32     `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Results []*Record `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListResponse) GetResults() []*Record {
	if m != nil {
		return m.Results
	}
	return nil
}

type StatsRequest struct {
	UserId     int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CategoryId int64  `protobuf:"varint,2,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Tag        string `protobuf:"bytes,3,opt,name=tag" json:"tag,omitempty"`
}

func (m *StatsRequest) Reset()                    { *m = StatsRequest{} }
func (m *StatsRequest) String() string            { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()               {}
func (*StatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *StatsRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *StatsRequest) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *StatsRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type StatsResponse struct {
	Total int32 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
}

func (m *StatsResponse) Reset()                    { *m = StatsResponse{} }
func (m *StatsResponse) String() string            { return proto.CompactTextString(m) }
func (*StatsResponse) ProtoMessage()               {}
func (*StatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *StatsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*Attachment)(nil), "post.Attachment")
	proto.RegisterType((*Tag)(nil), "post.Tag")
	proto.RegisterType((*Record)(nil), "post.Record")
	proto.RegisterType((*CreateRequest)(nil), "post.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "post.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "post.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "post.ReadResponse")
	proto.RegisterType((*DeleteRequest)(nil), "post.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "post.DeleteResponse")
	proto.RegisterType((*ListRequest)(nil), "post.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "post.ListResponse")
	proto.RegisterType((*StatsRequest)(nil), "post.StatsRequest")
	proto.RegisterType((*StatsResponse)(nil), "post.StatsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Post service

type PostClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
	Stats(ctx context.Context, in *StatsRequest, opts ...client.CallOption) (*StatsResponse, error)
}

type postClient struct {
	c           client.Client
	serviceName string
}

func NewPostClient(serviceName string, c client.Client) PostClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "post"
	}
	return &postClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *postClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Post.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Post.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Post.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Post.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postClient) Stats(ctx context.Context, in *StatsRequest, opts ...client.CallOption) (*StatsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Post.Stats", in)
	out := new(StatsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Post service

type PostHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
	Stats(context.Context, *StatsRequest, *StatsResponse) error
}

func RegisterPostHandler(s server.Server, hdlr PostHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Post{hdlr}, opts...))
}

type Post struct {
	PostHandler
}

func (h *Post) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.PostHandler.Create(ctx, in, out)
}

func (h *Post) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.PostHandler.Read(ctx, in, out)
}

func (h *Post) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.PostHandler.Delete(ctx, in, out)
}

func (h *Post) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.PostHandler.List(ctx, in, out)
}

func (h *Post) Stats(ctx context.Context, in *StatsRequest, out *StatsResponse) error {
	return h.PostHandler.Stats(ctx, in, out)
}

func init() { proto.RegisterFile("code.xxxxxx.com/micro/proto/post/post.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 570 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0xdd, 0x26, 0x69, 0xba, 0xbd, 0xe9, 0x2e, 0xf5, 0x6e, 0xd1, 0x58, 0xe9, 0x6e, 0x09, 0x2a,
	0x0b, 0x42, 0x0b, 0xd5, 0x7e, 0xc0, 0xa2, 0x2f, 0x0b, 0xfb, 0x20, 0x71, 0x7d, 0xf1, 0xa5, 0x8c,
	0xc9, 0x6c, 0x0d, 0x24, 0x99, 0x3a, 0x73, 0x2b, 0xf8, 0x05, 0x82, 0x7f, 0xe3, 0x1f, 0x4a, 0x66,
	0x32, 0x6d, 0x52, 0xd9, 0xe2, 0x4b, 0x99, 0x7b, 0xce, 0x9d, 0x7b, 0x4f, 0xce, 0x1c, 0x0a, 0x6f,
	0x12, 0x91, 0xf2, 0x19, 0x4b, 0x88, 0x98, 0x98, 0x25, 0xa2, 0x98, 0x17, 0x59, 0x22, 0xc5, 0x7c,
	0x23, 0x05, 0x89, 0xf9, 0x46, 0x28, 0xd2, 0x3f, 0x33, 0x5d, 0xa3, 0x57, 0x9d, 0xa3, 0x4b, 0x80,
	0x1b, 0x22, 0x96, 0x7c, 0x2b, 0x78, 0x49, 0x38, 0x04, 0x77, 0x2b, 0xf3, 0xb0, 0x33, 0xed, 0x5c,
	0xf7, 0xe3, 0xea, 0x18, 0x3d, 0x07, 0xf7, 0x9e, 0xad, 0x11, 0xc1, 0x2b, 0x59, 0xc1, 0x6b, 0x46,
	0x9f, 0xa3, 0x3f, 0x0e, 0xf8, 0x31, 0x4f, 0x84, 0x4c, 0xf1, 0x1c, 0x9c, 0x2c, 0xd5, 0xa4, 0x1b,
	0x3b, 0x59, 0x8a, 0xcf, 0xa0, 0xb7, 0x55, 0x5c, 0xae, 0xb2, 0x34, 0x74, 0x34, 0xe8, 0x57, 0xe5,
	0x6d, 0x8a, 0x57, 0x10, 0x24, 0x8c, 0xf8, 0x5a, 0xc8, 0x9f, 0x15, 0xe9, 0x6a, 0x12, 0x2c, 0x74,
	0x9b, 0xe2, 0x08, 0xba, 0x94, 0x51, 0xce, 0x43, 0x4f, 0x6f, 0x32, 0x05, 0x86, 0xd0, 0x4b, 0x44,
	0x49, 0xbc, 0xa4, 0xb0, 0xab, 0x71, 0x5b, 0xe2, 0x0b, 0xe8, 0x27, 0xe2, 0x07, 0x97, 0xab, 0x4a,
	0xb7, 0xaf, 0xb9, 0x53, 0x0d, 0x7c, 0x96, 0x39, 0x4e, 0x00, 0x12, 0xc9, 0x19, 0xf1, 0x74, 0xc5,
	0x28, 0xec, 0x69, 0xb6, 0x5f, 0x23, 0x37, 0x84, 0x13, 0xf0, 0x88, 0xad, 0x55, 0x78, 0x3a, 0x75,
	0xaf, 0x83, 0x45, 0x7f, 0xa6, 0xcd, 0xb9, 0x67, 0xeb, 0x58, 0xc3, 0xb8, 0x80, 0x80, 0xed, 0xac,
	0x51, 0x61, 0x5f, 0x77, 0x0d, 0x4d, 0xd7, 0xde, 0xb3, 0xb8, 0xd9, 0x84, 0x97, 0x00, 0x1b, 0x2e,
	0x8b, 0x4c, 0xa9, 0x4c, 0x94, 0x21, 0xe8, 0x8d, 0x0d, 0x24, 0x5a, 0xc2, 0xd9, 0x7b, 0xbd, 0x3f,
	0xe6, 0xdf, 0xb7, 0x5c, 0x11, 0xbe, 0x04, 0x5f, 0x6a, 0x0f, 0xb5, 0x7b, 0xc1, 0x62, 0x60, 0xe6,
	0x1b, 0x5f, 0xe3, 0x9a, 0x8b, 0xa6, 0x70, 0x6e, 0xaf, 0xa9, 0x8d, 0x28, 0x15, 0x3f, 0x74, 0x3c,
	0x9a, 0x40, 0x10, 0x73, 0x96, 0xda, 0xb1, 0x87, 0xf4, 0x3b, 0x18, 0x18, 0xba, 0xbe, 0xfe, 0x7f,
	0x6b, 0xaf, 0xe0, 0xec, 0x03, 0xcf, 0xf9, 0x5e, 0xed, 0xe1, 0xd8, 0x29, 0x9c, 0xdb, 0x86, 0x47,
	0x74, 0xfd, 0xea, 0x40, 0x70, 0x97, 0x29, 0xb2, 0x13, 0x46, 0xd0, 0xcd, 0xb3, 0x22, 0xa3, 0xba,
	0xc5, 0x14, 0xf8, 0x14, 0x7c, 0xf1, 0xf0, 0xa0, 0x38, 0xd9, 0xb8, 0x98, 0xaa, 0x99, 0x23, 0xf7,
	0x58, 0x8e, 0xbc, 0x7f, 0x72, 0x34, 0x04, 0x97, 0xd8, 0xba, 0x4e, 0x4b, 0x75, 0x8c, 0xee, 0x60,
	0x60, 0x84, 0xd4, 0x4a, 0xab, 0xa4, 0x09, 0x62, 0x26, 0xed, 0xdd, 0xd8, 0x14, 0xf8, 0x1a, 0x7a,
	0x92, 0xab, 0x6d, 0x4e, 0x2a, 0x74, 0xf4, 0x83, 0xb7, 0x9d, 0xb1, 0x64, 0xf4, 0x05, 0x06, 0x9f,
	0x88, 0x91, 0xb2, 0xdf, 0xd5, 0x50, 0xda, 0x39, 0xa6, 0xd4, 0x79, 0x4c, 0xa9, 0xbb, 0x57, 0xfa,
	0x0a, 0xce, 0xea, 0xd9, 0xc7, 0xa4, 0x2e, 0x7e, 0x3b, 0xe0, 0x7d, 0x14, 0x8a, 0x70, 0x09, 0xbe,
	0x49, 0x07, 0x5e, 0x18, 0xb1, 0xad, 0x88, 0x8d, 0x47, 0x6d, 0xd0, 0xcc, 0x8c, 0x4e, 0x70, 0x0e,
	0x5e, 0x95, 0x09, 0x7c, 0x62, 0xbf, 0x70, 0x17, 0x9f, 0x31, 0x36, 0xa1, 0xdd, 0x85, 0x25, 0xf8,
	0xe6, 0xb5, 0xed, 0x9e, 0x56, 0x38, 0xec, 0x9e, 0x76, 0x20, 0xcc, 0x9e, 0xca, 0x78, 0xbb, 0xa7,
	0x91, 0x06, 0xbb, 0xa7, 0xf9, 0x2e, 0xd1, 0x09, 0x2e, 0xa0, 0xab, 0xbf, 0x1f, 0x6b, 0xba, 0x69,
	0xf4, 0xf8, 0xa2, 0x85, 0xd9, 0x3b, 0x5f, 0x7d, 0xfd, 0xa7, 0xf6, 0xf6, 0x6f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xd2, 0x00, 0xf2, 0xc6, 0x03, 0x05, 0x00, 0x00,
}
