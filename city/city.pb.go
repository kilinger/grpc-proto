// Code generated by protoc-gen-go. DO NOT EDIT.
// source: code.xxxxxx.com/micro/proto/city/city.proto

/*
Package city is a generated protocol buffer package.

It is generated from these files:
	code.xxxxxx.com/micro/proto/city/city.proto

It has these top-level messages:
	Record
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	DeleteRequest
	DeleteResponse
	ListRequest
	ListResponse
*/
package city

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	Id          int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId      int64  `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	EnName      string `protobuf:"bytes,4,opt,name=en_name,json=enName" json:"en_name,omitempty"`
	Intro       string `protobuf:"bytes,5,opt,name=intro" json:"intro,omitempty"`
	LogoUrl     string `protobuf:"bytes,6,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
	CoverUrl    string `protobuf:"bytes,7,opt,name=cover_url,json=coverUrl" json:"cover_url,omitempty"`
	UrlFragment string `protobuf:"bytes,8,opt,name=url_fragment,json=urlFragment" json:"url_fragment,omitempty"`
	CreatedAt   string `protobuf:"bytes,9,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Record) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Record) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Record) GetEnName() string {
	if m != nil {
		return m.EnName
	}
	return ""
}

func (m *Record) GetIntro() string {
	if m != nil {
		return m.Intro
	}
	return ""
}

func (m *Record) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func (m *Record) GetCoverUrl() string {
	if m != nil {
		return m.CoverUrl
	}
	return ""
}

func (m *Record) GetUrlFragment() string {
	if m != nil {
		return m.UrlFragment
	}
	return ""
}

func (m *Record) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type CreateRequest struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type DeleteRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListRequest struct {
	Limit     int64  `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset    int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	UserId    int64  `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	NameIndex string `protobuf:"bytes,5,opt,name=name_index,json=nameIndex" json:"name_index,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ListRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListRequest) GetNameIndex() string {
	if m != nil {
		return m.NameIndex
	}
	return ""
}

type ListResponse struct {
	Total   int32     `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Results []*Record `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListResponse) GetResults() []*Record {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "city.Record")
	proto.RegisterType((*CreateRequest)(nil), "city.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "city.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "city.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "city.ReadResponse")
	proto.RegisterType((*DeleteRequest)(nil), "city.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "city.DeleteResponse")
	proto.RegisterType((*ListRequest)(nil), "city.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "city.ListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for City service

type CityClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
}

type cityClient struct {
	c           client.Client
	serviceName string
}

func NewCityClient(serviceName string, c client.Client) CityClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "city"
	}
	return &cityClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *cityClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "City.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "City.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "City.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cityClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "City.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for City service

type CityHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
}

func RegisterCityHandler(s server.Server, hdlr CityHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&City{hdlr}, opts...))
}

type City struct {
	CityHandler
}

func (h *City) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.CityHandler.Create(ctx, in, out)
}

func (h *City) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.CityHandler.Read(ctx, in, out)
}

func (h *City) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.CityHandler.Delete(ctx, in, out)
}

func (h *City) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.CityHandler.List(ctx, in, out)
}

func init() { proto.RegisterFile("code.xxxxxx.com/micro/proto/city/city.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0xdd, 0xb4, 0x69, 0xda, 0xdc, 0x76, 0x0b, 0x8e, 0x45, 0xe3, 0x4a, 0x31, 0x06, 0x91, 0x05,
	0xa1, 0x85, 0xd5, 0x7e, 0x80, 0xac, 0x08, 0x0b, 0x8b, 0x0f, 0x01, 0x9f, 0x43, 0xcc, 0xdc, 0x2e,
	0x03, 0x93, 0xcc, 0x3a, 0x99, 0x88, 0xfb, 0x05, 0xfe, 0xa1, 0x9f, 0xe1, 0x37, 0xc8, 0xdc, 0xc9,
	0xac, 0x69, 0x55, 0xd8, 0x97, 0x36, 0xe7, 0x9c, 0x3b, 0xf7, 0xde, 0x9c, 0x33, 0x81, 0x37, 0x95,
	0xe2, 0xb8, 0x29, 0x2b, 0x63, 0x4a, 0xb5, 0xa9, 0x54, 0xbd, 0xad, 0x45, 0xa5, 0xd5, 0xf6, 0x56,
	0x2b, 0xa3, 0xb6, 0x95, 0x30, 0x77, 0xf4, 0xb3, 0x21, 0xcc, 0x42, 0xfb, 0x9c, 0xfd, 0x0a, 0x20,
	0xca, 0xb1, 0x52, 0x9a, 0xb3, 0x25, 0x8c, 0x04, 0x4f, 0x82, 0x34, 0x38, 0x1f, 0xe7, 0x23, 0xc1,
	0xd9, 0x53, 0x98, 0x76, 0x2d, 0xea, 0x42, 0xf0, 0x64, 0x44, 0x64, 0x64, 0xe1, 0x15, 0x67, 0x0c,
	0xc2, 0xa6, 0xac, 0x31, 0x19, 0xa7, 0xc1, 0x79, 0x9c, 0xd3, 0xb3, 0x2d, 0xc6, 0xa6, 0x20, 0x3a,
	0x24, 0x3a, 0xc2, 0xe6, 0x93, 0x15, 0x56, 0x30, 0x11, 0x8d, 0xd1, 0x2a, 0x99, 0x10, 0xed, 0x00,
	0x7b, 0x06, 0x33, 0xa9, 0x6e, 0x54, 0xd1, 0x69, 0x99, 0x44, 0x24, 0x4c, 0x2d, 0xfe, 0xac, 0x25,
	0x7b, 0x0e, 0x71, 0xa5, 0xbe, 0xa1, 0x26, 0x6d, 0x4a, 0xda, 0x8c, 0x08, 0x2b, 0xbe, 0x84, 0x45,
	0xa7, 0x65, 0xb1, 0xd7, 0xe5, 0x4d, 0x8d, 0x8d, 0x49, 0x66, 0xa4, 0xcf, 0x3b, 0x2d, 0x3f, 0xf6,
	0x14, 0x5b, 0x03, 0x54, 0x1a, 0x4b, 0x83, 0xbc, 0x28, 0x4d, 0x12, 0x53, 0x41, 0xdc, 0x33, 0xef,
	0x4d, 0xb6, 0x83, 0xd3, 0x4b, 0x02, 0x39, 0x7e, 0xed, 0xb0, 0x35, 0xec, 0x15, 0x44, 0x9a, 0x0c,
	0xa0, 0x57, 0x9f, 0x5f, 0x2c, 0x36, 0x64, 0x92, 0x33, 0x25, 0xef, 0xb5, 0x2c, 0x85, 0xa5, 0x3f,
	0xd6, 0xde, 0xaa, 0xa6, 0xc5, 0x63, 0xbb, 0xb2, 0x35, 0xcc, 0x73, 0x2c, 0xb9, 0x6f, 0x7b, 0x2c,
	0xbf, 0x83, 0x85, 0x93, 0xfb, 0xe3, 0x0f, 0x1b, 0xfb, 0x02, 0x4e, 0x3f, 0xa0, 0xc4, 0x3f, 0xdb,
	0x1e, 0xb7, 0x4d, 0x61, 0xe9, 0x0b, 0xfe, 0xb3, 0xd7, 0x8f, 0x00, 0xe6, 0xd7, 0xa2, 0x35, 0xbe,
	0xc3, 0x0a, 0x26, 0x52, 0xd4, 0xc2, 0xf4, 0x25, 0x0e, 0xb0, 0x27, 0x10, 0xa9, 0xfd, 0xbe, 0x45,
	0xe3, 0xb3, 0x76, 0x68, 0x78, 0x09, 0xc6, 0xff, 0xbc, 0x04, 0xe1, 0xe0, 0x12, 0xac, 0x01, 0xec,
	0x7f, 0x21, 0x1a, 0x8e, 0xdf, 0xfb, 0xc0, 0x63, 0xcb, 0x5c, 0x59, 0x22, 0xbb, 0x86, 0x85, 0x5b,
	0xa4, 0xdf, 0x74, 0x05, 0x13, 0xa3, 0x4c, 0x29, 0x69, 0x93, 0x49, 0xee, 0x00, 0x7b, 0x0d, 0x53,
	0x8d, 0x6d, 0x27, 0x4d, 0x9b, 0x8c, 0xd2, 0xf1, 0x5f, 0xce, 0x78, 0xf1, 0xe2, 0x67, 0x00, 0xe1,
	0xa5, 0x30, 0x77, 0x6c, 0x07, 0x91, 0x8b, 0x86, 0x3d, 0x76, 0x95, 0x07, 0xf9, 0x9e, 0xad, 0x0e,
	0x49, 0x37, 0x3b, 0x3b, 0x61, 0x5b, 0x08, 0x6d, 0x20, 0xec, 0x91, 0x6f, 0x7f, 0x9f, 0xdd, 0x19,
	0x1b, 0x52, 0xf7, 0x07, 0x76, 0x10, 0x39, 0xab, 0xfd, 0x9c, 0x83, 0x64, 0xfc, 0x9c, 0xc3, 0x34,
	0xdc, 0x1c, 0xfb, 0xd6, 0x7e, 0xce, 0x20, 0x0a, 0x3f, 0x67, 0x68, 0x4a, 0x76, 0xf2, 0x25, 0xa2,
	0xef, 0xf3, 0xed, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x06, 0xbc, 0xdd, 0x52, 0xce, 0x03, 0x00,
	0x00,
}
