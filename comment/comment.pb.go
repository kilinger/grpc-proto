// Code generated by protoc-gen-go. DO NOT EDIT.
// source: code.xxxxxx.com/micro/proto/comment/comment.proto

/*
Package comment is a generated protocol buffer package.

It is generated from these files:
	code.xxxxxx.com/micro/proto/comment/comment.proto

It has these top-level messages:
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	DeleteRequest
	DeleteResponse
	ListRequest
	Record
	ListResponse
	StatsRequest
	StatsResponse
*/
package comment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateRequest struct {
	UserId     int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Content    string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	ObjectType string `protobuf:"bytes,3,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	ObjectId   string `protobuf:"bytes,4,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Object     string `protobuf:"bytes,5,opt,name=object" json:"object,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CreateRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *CreateRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *CreateRequest) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

type CreateResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeleteResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListRequest struct {
	UserId     int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ObjectType string `protobuf:"bytes,3,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	ObjectId   string `protobuf:"bytes,4,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Limit      int64  `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	Offset     int64  `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ListRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *ListRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *ListRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type Record struct {
	Id         int64                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId     int64                      `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Content    string                     `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	ObjectType string                     `protobuf:"bytes,4,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	ObjectId   string                     `protobuf:"bytes,5,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Object     string                     `protobuf:"bytes,6,opt,name=object" json:"object,omitempty"`
	CreatedAt  *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Record) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Record) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Record) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Record) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *Record) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *Record) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *Record) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ListResponse struct {
	Total   int32     `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Results []*Record `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListResponse) GetResults() []*Record {
	if m != nil {
		return m.Results
	}
	return nil
}

type StatsRequest struct {
	UserId     int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	ObjectId   string `protobuf:"bytes,3,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (m *StatsRequest) Reset()                    { *m = StatsRequest{} }
func (m *StatsRequest) String() string            { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()               {}
func (*StatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *StatsRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *StatsRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *StatsRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

type StatsResponse struct {
	Total int32 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
}

func (m *StatsResponse) Reset()                    { *m = StatsResponse{} }
func (m *StatsResponse) String() string            { return proto.CompactTextString(m) }
func (*StatsResponse) ProtoMessage()               {}
func (*StatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *StatsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "comment.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "comment.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "comment.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "comment.ReadResponse")
	proto.RegisterType((*DeleteRequest)(nil), "comment.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "comment.DeleteResponse")
	proto.RegisterType((*ListRequest)(nil), "comment.ListRequest")
	proto.RegisterType((*Record)(nil), "comment.Record")
	proto.RegisterType((*ListResponse)(nil), "comment.ListResponse")
	proto.RegisterType((*StatsRequest)(nil), "comment.StatsRequest")
	proto.RegisterType((*StatsResponse)(nil), "comment.StatsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Comment service

type CommentClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
	Stats(ctx context.Context, in *StatsRequest, opts ...client.CallOption) (*StatsResponse, error)
}

type commentClient struct {
	c           client.Client
	serviceName string
}

func NewCommentClient(serviceName string, c client.Client) CommentClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "comment"
	}
	return &commentClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *commentClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Comment.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Comment.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Comment.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Comment.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentClient) Stats(ctx context.Context, in *StatsRequest, opts ...client.CallOption) (*StatsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Comment.Stats", in)
	out := new(StatsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Comment service

type CommentHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
	Stats(context.Context, *StatsRequest, *StatsResponse) error
}

func RegisterCommentHandler(s server.Server, hdlr CommentHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Comment{hdlr}, opts...))
}

type Comment struct {
	CommentHandler
}

func (h *Comment) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.CommentHandler.Create(ctx, in, out)
}

func (h *Comment) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.CommentHandler.Read(ctx, in, out)
}

func (h *Comment) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.CommentHandler.Delete(ctx, in, out)
}

func (h *Comment) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.CommentHandler.List(ctx, in, out)
}

func (h *Comment) Stats(ctx context.Context, in *StatsRequest, out *StatsResponse) error {
	return h.CommentHandler.Stats(ctx, in, out)
}

func init() { proto.RegisterFile("code.xxxxxx.com/micro/proto/comment/comment.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0xde, 0x24, 0x4d, 0x62, 0x4f, 0x7f, 0x84, 0xa1, 0x76, 0x43, 0x44, 0x1b, 0x02, 0x42, 0xbd,
	0x49, 0xb1, 0x22, 0x28, 0x7b, 0x25, 0xeb, 0xcd, 0x82, 0x20, 0xc4, 0xbd, 0x2f, 0x69, 0x72, 0xba,
	0x44, 0x92, 0x4e, 0xcc, 0x9c, 0x5e, 0xec, 0x6b, 0x78, 0xe5, 0x3b, 0xf8, 0x4a, 0x3e, 0x8c, 0x34,
	0x93, 0xe9, 0x4e, 0x23, 0xad, 0xc8, 0x5e, 0x25, 0xe7, 0x67, 0xe6, 0x7c, 0xf3, 0x7d, 0xe7, 0x83,
	0x37, 0x29, 0xcf, 0x30, 0x4a, 0x52, 0xa2, 0x84, 0x47, 0x29, 0x2f, 0x17, 0x65, 0x9e, 0xd6, 0x7c,
	0x51, 0xd5, 0x9c, 0xf8, 0x22, 0xe5, 0x65, 0x89, 0x5b, 0x52, 0xdf, 0xa8, 0xc9, 0x32, 0xb7, 0x0d,
	0xfd, 0xd9, 0x1d, 0xe7, 0x77, 0x05, 0xca, 0xe6, 0xf5, 0x6e, 0xb3, 0xa0, 0xbc, 0x44, 0x41, 0x49,
	0x59, 0xc9, 0xce, 0xf0, 0xa7, 0x01, 0xa3, 0xeb, 0x1a, 0x13, 0xc2, 0x18, 0xbf, 0xef, 0x50, 0x10,
	0xbb, 0x04, 0x77, 0x27, 0xb0, 0x5e, 0xe5, 0x99, 0x67, 0x04, 0xc6, 0xdc, 0x8a, 0x9d, 0x7d, 0x78,
	0x93, 0x31, 0x0f, 0xdc, 0x94, 0x6f, 0x09, 0xb7, 0xe4, 0x99, 0x81, 0x31, 0xef, 0xc7, 0x2a, 0x64,
	0x33, 0x18, 0xf0, 0xf5, 0x37, 0x4c, 0x69, 0x45, 0xf7, 0x15, 0x7a, 0x56, 0x53, 0x05, 0x99, 0xba,
	0xbd, 0xaf, 0x90, 0x3d, 0x87, 0x7e, 0xdb, 0x90, 0x67, 0x5e, 0xaf, 0x29, 0x3f, 0x91, 0x89, 0x9b,
	0x8c, 0x4d, 0xc1, 0x91, 0xff, 0x9e, 0xdd, 0x54, 0xda, 0x28, 0x0c, 0x60, 0xac, 0x90, 0x89, 0x8a,
	0x6f, 0x05, 0xb2, 0x31, 0x98, 0x07, 0x54, 0x66, 0x9e, 0x85, 0x2f, 0x60, 0x10, 0x63, 0x92, 0x29,
	0xe4, 0xdd, 0xf2, 0x4b, 0x18, 0xca, 0xf2, 0x89, 0xe3, 0x33, 0x18, 0x7d, 0xc2, 0x02, 0x1f, 0x9e,
	0xde, 0x6d, 0x08, 0x60, 0xac, 0x1a, 0x4e, 0x5c, 0xf1, 0xc3, 0x80, 0xc1, 0xe7, 0x5c, 0xd0, 0x3f,
	0xc9, 0x7b, 0x1c, 0x45, 0x13, 0xb0, 0x8b, 0xbc, 0xcc, 0x25, 0x43, 0x56, 0x2c, 0x83, 0x86, 0xb8,
	0xcd, 0x46, 0x20, 0x79, 0x8e, 0x9c, 0x25, 0xa3, 0xf0, 0xb7, 0x01, 0x4e, 0x8c, 0x29, 0xaf, 0xb3,
	0x2e, 0x5e, 0x1d, 0x9f, 0x79, 0x4a, 0x5c, 0xeb, 0xac, 0xb8, 0xbd, 0xf3, 0xc8, 0xed, 0x93, 0xe2,
	0x3a, 0xba, 0xb8, 0xec, 0x03, 0x40, 0xda, 0x88, 0x9b, 0xad, 0x12, 0xf2, 0xdc, 0xc0, 0x98, 0x0f,
	0x96, 0x7e, 0x24, 0xb7, 0x35, 0x52, 0xdb, 0x1a, 0xdd, 0xaa, 0x6d, 0x8d, 0xfb, 0x6d, 0xf7, 0x47,
	0x0a, 0xbf, 0xc0, 0x50, 0x52, 0xde, 0x6a, 0x32, 0x01, 0x9b, 0x38, 0x25, 0x45, 0xf3, 0x4c, 0x3b,
	0x96, 0x01, 0x7b, 0x0d, 0x6e, 0x8d, 0x62, 0x57, 0x90, 0xf0, 0xcc, 0xc0, 0x9a, 0x0f, 0x96, 0x4f,
	0x23, 0xe5, 0x11, 0xc9, 0x4d, 0xac, 0xea, 0x21, 0xc2, 0xf0, 0x2b, 0x25, 0x24, 0xfe, 0x57, 0x44,
	0xf3, 0x3c, 0x15, 0xd6, 0x31, 0x15, 0xe1, 0x2b, 0x18, 0xb5, 0x63, 0xce, 0x01, 0x5f, 0xfe, 0x32,
	0xc1, 0xbd, 0x96, 0x48, 0xd9, 0x15, 0x38, 0xd2, 0x02, 0x6c, 0x7a, 0x40, 0x7f, 0xe4, 0x56, 0xff,
	0xf2, 0xaf, 0xbc, 0xbc, 0x3c, 0xbc, 0x60, 0xef, 0xa0, 0xb7, 0x5f, 0x7f, 0x36, 0xd1, 0x1e, 0x7e,
	0x30, 0x8b, 0xff, 0xac, 0x93, 0x3d, 0x1c, 0xbb, 0x02, 0x47, 0x2e, 0xbd, 0x36, 0xf3, 0xc8, 0x26,
	0xda, 0xcc, 0x63, 0x77, 0xc8, 0x99, 0x7b, 0x6d, 0xb4, 0x99, 0x9a, 0x3b, 0xb4, 0x99, 0xba, 0x80,
	0xe1, 0x05, 0x7b, 0x0f, 0x76, 0x43, 0x0d, 0x7b, 0xe8, 0xd0, 0x15, 0xf1, 0xa7, 0xdd, 0xb4, 0x3a,
	0xb9, 0x76, 0x9a, 0x5d, 0x79, 0xfb, 0x27, 0x00, 0x00, 0xff, 0xff, 0xee, 0x65, 0x85, 0x1d, 0x25,
	0x05, 0x00, 0x00,
}
