// Code generated by protoc-gen-go. DO NOT EDIT.
// source: code.xxxxxx.com/micro/proto/enquiry/enquiry.proto

/*
Package enquiry is a generated protocol buffer package.

It is generated from these files:
	code.xxxxxx.com/micro/proto/enquiry/enquiry.proto

It has these top-level messages:
	Record
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	DeleteRequest
	DeleteResponse
	ListRequest
	ListResponse
*/
package enquiry

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	Id           int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId       int64  `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Url          string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Description  string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Quantity     int32  `protobuf:"varint,6,opt,name=quantity" json:"quantity,omitempty"`
	OrderType    string `protobuf:"bytes,7,opt,name=order_type,json=orderType" json:"order_type,omitempty"`
	ProcessType  string `protobuf:"bytes,8,opt,name=process_type,json=processType" json:"process_type,omitempty"`
	Contact      string `protobuf:"bytes,9,opt,name=contact" json:"contact,omitempty"`
	Phone        string `protobuf:"bytes,10,opt,name=phone" json:"phone,omitempty"`
	IndustryType string `protobuf:"bytes,11,opt,name=industry_type,json=industryType" json:"industry_type,omitempty"`
	ProductClass string `protobuf:"bytes,12,opt,name=product_class,json=productClass" json:"product_class,omitempty"`
	Area         string `protobuf:"bytes,13,opt,name=area" json:"area,omitempty"`
	Secured      bool   `protobuf:"varint,14,opt,name=secured" json:"secured,omitempty"`
	External     bool   `protobuf:"varint,15,opt,name=external" json:"external,omitempty"`
	DeliveryAt   string `protobuf:"bytes,16,opt,name=delivery_at,json=deliveryAt" json:"delivery_at,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Record) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Record) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Record) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Record) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Record) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Record) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *Record) GetProcessType() string {
	if m != nil {
		return m.ProcessType
	}
	return ""
}

func (m *Record) GetContact() string {
	if m != nil {
		return m.Contact
	}
	return ""
}

func (m *Record) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Record) GetIndustryType() string {
	if m != nil {
		return m.IndustryType
	}
	return ""
}

func (m *Record) GetProductClass() string {
	if m != nil {
		return m.ProductClass
	}
	return ""
}

func (m *Record) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *Record) GetSecured() bool {
	if m != nil {
		return m.Secured
	}
	return false
}

func (m *Record) GetExternal() bool {
	if m != nil {
		return m.External
	}
	return false
}

func (m *Record) GetDeliveryAt() string {
	if m != nil {
		return m.DeliveryAt
	}
	return ""
}

type CreateRequest struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type DeleteRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListRequest struct {
	Limit  int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	UserId int64 `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type ListResponse struct {
	Total   int32     `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Results []*Record `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListResponse) GetResults() []*Record {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "enquiry.Record")
	proto.RegisterType((*CreateRequest)(nil), "enquiry.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "enquiry.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "enquiry.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "enquiry.ReadResponse")
	proto.RegisterType((*DeleteRequest)(nil), "enquiry.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "enquiry.DeleteResponse")
	proto.RegisterType((*ListRequest)(nil), "enquiry.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "enquiry.ListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Enquiry service

type EnquiryClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
}

type enquiryClient struct {
	c           client.Client
	serviceName string
}

func NewEnquiryClient(serviceName string, c client.Client) EnquiryClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "enquiry"
	}
	return &enquiryClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *enquiryClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Enquiry.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *enquiryClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Enquiry.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *enquiryClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Enquiry.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *enquiryClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Enquiry.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Enquiry service

type EnquiryHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
}

func RegisterEnquiryHandler(s server.Server, hdlr EnquiryHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Enquiry{hdlr}, opts...))
}

type Enquiry struct {
	EnquiryHandler
}

func (h *Enquiry) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.EnquiryHandler.Create(ctx, in, out)
}

func (h *Enquiry) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.EnquiryHandler.Read(ctx, in, out)
}

func (h *Enquiry) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.EnquiryHandler.Delete(ctx, in, out)
}

func (h *Enquiry) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.EnquiryHandler.List(ctx, in, out)
}

func init() { proto.RegisterFile("code.xxxxxx.com/micro/proto/enquiry/enquiry.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5f, 0x6b, 0xdb, 0x3e,
	0x14, 0x6d, 0xe2, 0xda, 0x6e, 0x6f, 0xfe, 0xb4, 0x88, 0xfc, 0x5a, 0x51, 0x28, 0xf5, 0xcf, 0x7d,
	0x58, 0xf6, 0x92, 0xb2, 0x8e, 0xb1, 0x41, 0x9f, 0x46, 0xb7, 0x87, 0xc1, 0x60, 0x60, 0xfa, 0x1e,
	0x34, 0xe9, 0x96, 0x09, 0x1c, 0xcb, 0x95, 0xe4, 0x31, 0x7f, 0xb7, 0x7d, 0xa9, 0x7d, 0x83, 0x61,
	0xc9, 0xca, 0x9c, 0x6c, 0x83, 0x3d, 0x45, 0xe7, 0x9c, 0xab, 0x73, 0x6f, 0xce, 0x15, 0x86, 0x17,
	0x5c, 0x09, 0x5c, 0x31, 0x6e, 0x2d, 0x53, 0x2b, 0xae, 0x36, 0x37, 0x1b, 0xc9, 0xb5, 0xba, 0xa9,
	0xb5, 0xb2, 0xea, 0x06, 0xab, 0xa7, 0x46, 0xea, 0x36, 0xfc, 0xae, 0x1c, 0x4b, 0xd2, 0x1e, 0xe6,
	0xdf, 0x23, 0x48, 0x0a, 0xe4, 0x4a, 0x0b, 0x32, 0x87, 0xb1, 0x14, 0x74, 0x94, 0x8d, 0x96, 0x51,
	0x31, 0x96, 0x82, 0x9c, 0x43, 0xda, 0x18, 0xd4, 0x6b, 0x29, 0xe8, 0xd8, 0x91, 0x49, 0x07, 0x3f,
	0x08, 0x42, 0xe0, 0xb0, 0x62, 0x1b, 0xa4, 0x51, 0x36, 0x5a, 0x1e, 0x17, 0xee, 0x4c, 0x4e, 0x21,
	0x6a, 0x74, 0x49, 0x0f, 0x1d, 0xd5, 0x1d, 0x49, 0x06, 0x13, 0x81, 0x86, 0x6b, 0x59, 0x5b, 0xa9,
	0x2a, 0x1a, 0x3b, 0x65, 0x48, 0x91, 0x0b, 0x38, 0x7a, 0x6a, 0x58, 0x65, 0xa5, 0x6d, 0x69, 0x92,
	0x8d, 0x96, 0x71, 0xb1, 0xc5, 0xe4, 0x12, 0x40, 0x69, 0x81, 0x7a, 0x6d, 0xdb, 0x1a, 0x69, 0xea,
	0x2e, 0x1f, 0x3b, 0xe6, 0xa1, 0xad, 0x91, 0xfc, 0x0f, 0xd3, 0x5a, 0x2b, 0x8e, 0xc6, 0xf8, 0x82,
	0x23, 0xef, 0xde, 0x73, 0xae, 0x84, 0x42, 0xca, 0x55, 0x65, 0x19, 0xb7, 0xf4, 0xd8, 0xa9, 0x01,
	0x92, 0x05, 0xc4, 0xf5, 0x17, 0x55, 0x21, 0x05, 0xc7, 0x7b, 0x40, 0xae, 0x61, 0x26, 0x2b, 0xd1,
	0x18, 0xab, 0x5b, 0xef, 0x39, 0x71, 0xea, 0x34, 0x90, 0xce, 0xf4, 0x1a, 0x66, 0xb5, 0x56, 0xa2,
	0xe1, 0x76, 0xcd, 0x4b, 0x66, 0x0c, 0x9d, 0xfa, 0xa2, 0x9e, 0xbc, 0xef, 0xb8, 0x2e, 0x1f, 0xa6,
	0x91, 0xd1, 0x99, 0xcf, 0xa7, 0x3b, 0x77, 0xd3, 0x18, 0xe4, 0x8d, 0x46, 0x41, 0xe7, 0xd9, 0x68,
	0x79, 0x54, 0x04, 0xd8, 0xa5, 0x80, 0xdf, 0x2c, 0xea, 0x8a, 0x95, 0xf4, 0xc4, 0x49, 0x5b, 0x4c,
	0xae, 0xba, 0x0c, 0x4b, 0xf9, 0x15, 0x75, 0xbb, 0x66, 0x96, 0x9e, 0x3a, 0x43, 0x08, 0xd4, 0x5b,
	0x9b, 0xbf, 0x81, 0xd9, 0xbd, 0x46, 0x66, 0xb1, 0xc0, 0xa7, 0x06, 0x8d, 0x25, 0xcf, 0x20, 0xd1,
	0x6e, 0x9d, 0x6e, 0x91, 0x93, 0xdb, 0x93, 0x55, 0x58, 0xbc, 0xdf, 0x72, 0xd1, 0xcb, 0x79, 0x06,
	0xf3, 0x70, 0xd3, 0xd4, 0xaa, 0x32, 0xb8, 0xbf, 0xff, 0xfc, 0x12, 0x26, 0x05, 0x32, 0x11, 0x9c,
	0xf7, 0xe5, 0xd7, 0x30, 0xf5, 0x72, 0x7f, 0xfd, 0x9f, 0x3b, 0x5f, 0xc1, 0xec, 0x1d, 0x96, 0xf8,
	0x6b, 0xe6, 0x7d, 0xe7, 0x0c, 0xe6, 0xa1, 0xe0, 0x2f, 0xa3, 0x3d, 0xc0, 0xe4, 0xa3, 0x34, 0x36,
	0x18, 0x2c, 0x20, 0x2e, 0xe5, 0x46, 0xda, 0xbe, 0xc2, 0x03, 0x72, 0x06, 0x89, 0x7a, 0x7c, 0x34,
	0x68, 0xc3, 0xf3, 0xf5, 0x68, 0xf8, 0xae, 0xa3, 0xe1, 0xbb, 0xce, 0x3f, 0xc1, 0xd4, 0xbb, 0xf6,
	0x5d, 0x17, 0x10, 0x5b, 0x65, 0x59, 0xe9, 0x6c, 0xe3, 0xc2, 0x03, 0xf2, 0x1c, 0x52, 0x8d, 0xa6,
	0x29, 0xad, 0xa1, 0xe3, 0x2c, 0xfa, 0xd3, 0x1f, 0x0d, 0xfa, 0xed, 0x8f, 0x11, 0xa4, 0xef, 0xbd,
	0x46, 0xee, 0x20, 0xf1, 0x79, 0x93, 0xb3, 0x6d, 0xfd, 0xce, 0xea, 0x2e, 0xce, 0x7f, 0xe3, 0xfd,
	0x1c, 0xf9, 0x01, 0x79, 0x05, 0x87, 0x5d, 0xd6, 0x64, 0x31, 0x68, 0xb5, 0xdd, 0xcc, 0xc5, 0x7f,
	0x7b, 0xec, 0xf6, 0xda, 0x1d, 0x24, 0x3e, 0xc8, 0x41, 0xcf, 0x9d, 0xe8, 0x07, 0x3d, 0x77, 0x13,
	0xf7, 0x3d, 0xbb, 0x34, 0x06, 0x3d, 0x07, 0x91, 0x0f, 0x7a, 0x0e, 0x23, 0xcb, 0x0f, 0x3e, 0x27,
	0xee, 0x03, 0xf3, 0xf2, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb1, 0xf9, 0xfc, 0x2d, 0x95, 0x04,
	0x00, 0x00,
}
