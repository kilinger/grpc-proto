// Code generated by protoc-gen-go. DO NOT EDIT.
// source: code.xxxxxx.com/micro/proto/user/user.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	code.xxxxxx.com/micro/proto/user/user.proto

It has these top-level messages:
	Record
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	ReadRequest
	ReadResponse
	ListRequest
	ListResponse
	AuthenticateRequest
	AuthenticateResponse
	RemoteLoginAuthenticateRequest
	RemoteLoginAuthenticateResponse
	RemoteLoginAssociateRequest
	RemoteLoginAssociateResponse
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	Id         int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Username   string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Phone      string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Email      string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	ScreenName string `protobuf:"bytes,5,opt,name=screen_name,json=screenName" json:"screen_name,omitempty"`
	Gender     string `protobuf:"bytes,6,opt,name=gender" json:"gender,omitempty"`
	AvatarUrl  string `protobuf:"bytes,7,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Address    string `protobuf:"bytes,8,opt,name=address" json:"address,omitempty"`
	Password   string `protobuf:"bytes,9,opt,name=password" json:"password,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Record) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Record) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Record) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Record) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Record) GetScreenName() string {
	if m != nil {
		return m.ScreenName
	}
	return ""
}

func (m *Record) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Record) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *Record) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Record) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CreateRequest struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdateRequest struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpdateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ReadRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReadResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type ListRequest struct {
	Username   string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Phone      string `protobuf:"bytes,2,opt,name=phone" json:"phone,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	ScreenName string `protobuf:"bytes,4,opt,name=screen_name,json=screenName" json:"screen_name,omitempty"`
	Gender     string `protobuf:"bytes,5,opt,name=gender" json:"gender,omitempty"`
	Address    string `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ListRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ListRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ListRequest) GetScreenName() string {
	if m != nil {
		return m.ScreenName
	}
	return ""
}

func (m *ListRequest) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *ListRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ListResponse struct {
	Total   int32     `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Results []*Record `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListResponse) GetResults() []*Record {
	if m != nil {
		return m.Results
	}
	return nil
}

type AuthenticateRequest struct {
	Login    string `protobuf:"bytes,1,opt,name=login" json:"login,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *AuthenticateRequest) Reset()                    { *m = AuthenticateRequest{} }
func (m *AuthenticateRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthenticateRequest) ProtoMessage()               {}
func (*AuthenticateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AuthenticateRequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *AuthenticateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthenticateResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *AuthenticateResponse) Reset()                    { *m = AuthenticateResponse{} }
func (m *AuthenticateResponse) String() string            { return proto.CompactTextString(m) }
func (*AuthenticateResponse) ProtoMessage()               {}
func (*AuthenticateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AuthenticateResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type RemoteLoginAuthenticateRequest struct {
	RemoteLogin   string `protobuf:"bytes,1,opt,name=remote_login,json=remoteLogin" json:"remote_login,omitempty"`
	RemoteLoginId string `protobuf:"bytes,2,opt,name=remote_login_id,json=remoteLoginId" json:"remote_login_id,omitempty"`
}

func (m *RemoteLoginAuthenticateRequest) Reset()                    { *m = RemoteLoginAuthenticateRequest{} }
func (m *RemoteLoginAuthenticateRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoteLoginAuthenticateRequest) ProtoMessage()               {}
func (*RemoteLoginAuthenticateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RemoteLoginAuthenticateRequest) GetRemoteLogin() string {
	if m != nil {
		return m.RemoteLogin
	}
	return ""
}

func (m *RemoteLoginAuthenticateRequest) GetRemoteLoginId() string {
	if m != nil {
		return m.RemoteLoginId
	}
	return ""
}

type RemoteLoginAuthenticateResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *RemoteLoginAuthenticateResponse) Reset()         { *m = RemoteLoginAuthenticateResponse{} }
func (m *RemoteLoginAuthenticateResponse) String() string { return proto.CompactTextString(m) }
func (*RemoteLoginAuthenticateResponse) ProtoMessage()    {}
func (*RemoteLoginAuthenticateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12}
}

func (m *RemoteLoginAuthenticateResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type RemoteLoginAssociateRequest struct {
	Id            int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	RemoteLogin   string `protobuf:"bytes,2,opt,name=remote_login,json=remoteLogin" json:"remote_login,omitempty"`
	RemoteLoginId string `protobuf:"bytes,3,opt,name=remote_login_id,json=remoteLoginId" json:"remote_login_id,omitempty"`
}

func (m *RemoteLoginAssociateRequest) Reset()                    { *m = RemoteLoginAssociateRequest{} }
func (m *RemoteLoginAssociateRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoteLoginAssociateRequest) ProtoMessage()               {}
func (*RemoteLoginAssociateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RemoteLoginAssociateRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RemoteLoginAssociateRequest) GetRemoteLogin() string {
	if m != nil {
		return m.RemoteLogin
	}
	return ""
}

func (m *RemoteLoginAssociateRequest) GetRemoteLoginId() string {
	if m != nil {
		return m.RemoteLoginId
	}
	return ""
}

type RemoteLoginAssociateResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *RemoteLoginAssociateResponse) Reset()                    { *m = RemoteLoginAssociateResponse{} }
func (m *RemoteLoginAssociateResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoteLoginAssociateResponse) ProtoMessage()               {}
func (*RemoteLoginAssociateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RemoteLoginAssociateResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "user.Record")
	proto.RegisterType((*CreateRequest)(nil), "user.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "user.CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "user.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "user.UpdateResponse")
	proto.RegisterType((*ReadRequest)(nil), "user.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "user.ReadResponse")
	proto.RegisterType((*ListRequest)(nil), "user.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "user.ListResponse")
	proto.RegisterType((*AuthenticateRequest)(nil), "user.AuthenticateRequest")
	proto.RegisterType((*AuthenticateResponse)(nil), "user.AuthenticateResponse")
	proto.RegisterType((*RemoteLoginAuthenticateRequest)(nil), "user.RemoteLoginAuthenticateRequest")
	proto.RegisterType((*RemoteLoginAuthenticateResponse)(nil), "user.RemoteLoginAuthenticateResponse")
	proto.RegisterType((*RemoteLoginAssociateRequest)(nil), "user.RemoteLoginAssociateRequest")
	proto.RegisterType((*RemoteLoginAssociateResponse)(nil), "user.RemoteLoginAssociateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for User service

type UserClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
	Authenticate(ctx context.Context, in *AuthenticateRequest, opts ...client.CallOption) (*AuthenticateResponse, error)
	RemoteLoginAuthenticate(ctx context.Context, in *RemoteLoginAuthenticateRequest, opts ...client.CallOption) (*RemoteLoginAuthenticateResponse, error)
	RemoteLoginAssociate(ctx context.Context, in *RemoteLoginAssociateRequest, opts ...client.CallOption) (*RemoteLoginAssociateResponse, error)
}

type userClient struct {
	c           client.Client
	serviceName string
}

func NewUserClient(serviceName string, c client.Client) UserClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "user"
	}
	return &userClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Authenticate(ctx context.Context, in *AuthenticateRequest, opts ...client.CallOption) (*AuthenticateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.Authenticate", in)
	out := new(AuthenticateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) RemoteLoginAuthenticate(ctx context.Context, in *RemoteLoginAuthenticateRequest, opts ...client.CallOption) (*RemoteLoginAuthenticateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.RemoteLoginAuthenticate", in)
	out := new(RemoteLoginAuthenticateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) RemoteLoginAssociate(ctx context.Context, in *RemoteLoginAssociateRequest, opts ...client.CallOption) (*RemoteLoginAssociateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "User.RemoteLoginAssociate", in)
	out := new(RemoteLoginAssociateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
	Authenticate(context.Context, *AuthenticateRequest, *AuthenticateResponse) error
	RemoteLoginAuthenticate(context.Context, *RemoteLoginAuthenticateRequest, *RemoteLoginAuthenticateResponse) error
	RemoteLoginAssociate(context.Context, *RemoteLoginAssociateRequest, *RemoteLoginAssociateResponse) error
}

func RegisterUserHandler(s server.Server, hdlr UserHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&User{hdlr}, opts...))
}

type User struct {
	UserHandler
}

func (h *User) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.UserHandler.Create(ctx, in, out)
}

func (h *User) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.UserHandler.Update(ctx, in, out)
}

func (h *User) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.UserHandler.Read(ctx, in, out)
}

func (h *User) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.UserHandler.List(ctx, in, out)
}

func (h *User) Authenticate(ctx context.Context, in *AuthenticateRequest, out *AuthenticateResponse) error {
	return h.UserHandler.Authenticate(ctx, in, out)
}

func (h *User) RemoteLoginAuthenticate(ctx context.Context, in *RemoteLoginAuthenticateRequest, out *RemoteLoginAuthenticateResponse) error {
	return h.UserHandler.RemoteLoginAuthenticate(ctx, in, out)
}

func (h *User) RemoteLoginAssociate(ctx context.Context, in *RemoteLoginAssociateRequest, out *RemoteLoginAssociateResponse) error {
	return h.UserHandler.RemoteLoginAssociate(ctx, in, out)
}

func init() { proto.RegisterFile("code.xxxxxx.com/micro/proto/user/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdf, 0x6e, 0xd3, 0x3e,
	0x14, 0x5e, 0x92, 0x26, 0x5d, 0x4f, 0xbb, 0xfe, 0x7e, 0x78, 0x11, 0x84, 0xc0, 0x58, 0x17, 0x8d,
	0x69, 0x12, 0x52, 0x2b, 0x0d, 0x76, 0xc7, 0x0d, 0x02, 0xa9, 0x42, 0xaa, 0xb8, 0x88, 0xd4, 0xeb,
	0xca, 0x24, 0xd6, 0x1a, 0x91, 0xc6, 0xc5, 0x76, 0x81, 0x47, 0xe2, 0xd9, 0xb8, 0xe0, 0x19, 0x50,
	0xec, 0xb8, 0x38, 0x59, 0x5a, 0xd6, 0x9b, 0x69, 0xe7, 0xdf, 0x77, 0xbe, 0xe3, 0xef, 0x9c, 0x14,
	0x5e, 0x25, 0x34, 0x25, 0x63, 0x9c, 0x08, 0x81, 0xe9, 0x38, 0xa1, 0xab, 0xc9, 0x2a, 0x4b, 0x18,
	0x9d, 0xac, 0x19, 0x15, 0x74, 0xb2, 0xe1, 0x84, 0xc9, 0x3f, 0x63, 0x69, 0xa3, 0x4e, 0xf9, 0x7f,
	0xf4, 0xdb, 0x02, 0x2f, 0x26, 0x09, 0x65, 0x29, 0x1a, 0x82, 0x9d, 0xa5, 0x81, 0x35, 0xb2, 0xae,
	0x9d, 0xd8, 0xce, 0x52, 0x14, 0xc2, 0x71, 0x99, 0x52, 0xe0, 0x15, 0x09, 0xec, 0x91, 0x75, 0xdd,
	0x8b, 0xb7, 0x36, 0xf2, 0xc1, 0x5d, 0x2f, 0x69, 0x41, 0x02, 0x47, 0x06, 0x94, 0x51, 0x7a, 0xc9,
	0x0a, 0x67, 0x79, 0xd0, 0x51, 0x5e, 0x69, 0xa0, 0x73, 0xe8, 0xf3, 0x84, 0x11, 0x52, 0x2c, 0x24,
	0x94, 0x2b, 0x63, 0xa0, 0x5c, 0x9f, 0x4a, 0xb0, 0xc7, 0xe0, 0xdd, 0x91, 0x22, 0x25, 0x2c, 0xf0,
	0x64, 0xac, 0xb2, 0xd0, 0x19, 0x00, 0xfe, 0x86, 0x05, 0x66, 0x8b, 0x0d, 0xcb, 0x83, 0xae, 0x8c,
	0xf5, 0x94, 0x67, 0xce, 0x72, 0x14, 0x40, 0x17, 0xa7, 0x29, 0x23, 0x9c, 0x07, 0xc7, 0x32, 0xa6,
	0xcd, 0x92, 0xf9, 0x1a, 0x73, 0xfe, 0x9d, 0xb2, 0x34, 0xe8, 0x29, 0xe6, 0xda, 0x8e, 0x6e, 0xe1,
	0xe4, 0x3d, 0x23, 0x58, 0x90, 0x98, 0x7c, 0xdd, 0x10, 0x2e, 0xd0, 0x25, 0x78, 0x4c, 0x3e, 0x80,
	0x1c, 0xbd, 0x7f, 0x33, 0x18, 0xcb, 0x47, 0x52, 0x8f, 0x12, 0x57, 0xb1, 0x68, 0x04, 0x43, 0x5d,
	0xc6, 0xd7, 0xb4, 0xe0, 0xa4, 0xf9, 0x5c, 0x25, 0xf0, 0x7c, 0x9d, 0x1e, 0x0c, 0xfc, 0x3f, 0x0c,
	0x75, 0x99, 0x02, 0x8e, 0xce, 0xa0, 0x1f, 0x13, 0x9c, 0x6a, 0x98, 0x66, 0x9f, 0x37, 0x30, 0x50,
	0xe1, 0x8a, 0xc7, 0xc3, 0xda, 0xfc, 0xb4, 0xa0, 0x3f, 0xcb, 0xb8, 0xd0, 0xa8, 0xa6, 0xb8, 0xd6,
	0x2e, 0x71, 0xed, 0x56, 0x71, 0x9d, 0x3d, 0xe2, 0x76, 0xf6, 0x88, 0xeb, 0xd6, 0xc4, 0x35, 0xd4,
	0xf3, 0x6a, 0xea, 0x45, 0x33, 0x18, 0x28, 0xa6, 0xd5, 0x80, 0x3e, 0xb8, 0x82, 0x0a, 0x9c, 0x4b,
	0x9e, 0x6e, 0xac, 0x0c, 0x74, 0x05, 0x5d, 0x46, 0xf8, 0x26, 0x17, 0x3c, 0xb0, 0x47, 0xce, 0xbd,
	0xb9, 0x75, 0x30, 0x9a, 0xc2, 0xe9, 0xbb, 0x8d, 0x58, 0x92, 0x42, 0x64, 0x89, 0x21, 0x8e, 0x0f,
	0x6e, 0x4e, 0xef, 0xb2, 0xa2, 0x1a, 0x5e, 0x19, 0xb5, 0xc5, 0xb1, 0x1b, 0x8b, 0xf3, 0x16, 0xfc,
	0x3a, 0xd0, 0x41, 0xef, 0xff, 0x05, 0x5e, 0xc4, 0x64, 0x45, 0x05, 0x99, 0x95, 0x8d, 0xda, 0x18,
	0x5d, 0xc0, 0x80, 0xc9, 0x8c, 0x85, 0x49, 0xac, 0xcf, 0xfe, 0x56, 0xa1, 0x2b, 0xf8, 0xcf, 0x4c,
	0x59, 0x64, 0x9a, 0xe5, 0x89, 0x91, 0xf5, 0x31, 0x8d, 0xa6, 0x70, 0xbe, 0xb3, 0xd9, 0x41, 0xac,
	0x7f, 0xc0, 0x33, 0x13, 0x88, 0x73, 0x9a, 0x64, 0x06, 0xe5, 0xe6, 0x17, 0xa3, 0x39, 0x82, 0xfd,
	0xa0, 0x11, 0x9c, 0xb6, 0x11, 0x3e, 0xc0, 0xf3, 0xf6, 0xce, 0x87, 0xf0, 0xbf, 0xf9, 0xe5, 0x40,
	0x67, 0xce, 0x09, 0x43, 0xb7, 0xe0, 0xa9, 0xf3, 0x45, 0xa7, 0x2a, 0xb1, 0xf6, 0x0d, 0x08, 0xfd,
	0xba, 0xb3, 0x3a, 0xc4, 0xa3, 0xb2, 0x4c, 0x1d, 0xa7, 0x2e, 0xab, 0x5d, 0xb8, 0x2e, 0x6b, 0xdc,
	0xef, 0x11, 0x9a, 0x40, 0xa7, 0x3c, 0x51, 0xf4, 0x48, 0x93, 0xda, 0x5e, 0x73, 0x88, 0x4c, 0x97,
	0x59, 0x50, 0xae, 0xbc, 0x2e, 0x30, 0x0e, 0x55, 0x17, 0x98, 0x17, 0x11, 0x1d, 0xa1, 0x29, 0x0c,
	0x4c, 0x59, 0xd1, 0x53, 0x95, 0xd5, 0xb2, 0x57, 0x61, 0xd8, 0x16, 0xda, 0x02, 0x2d, 0xe1, 0xc9,
	0x8e, 0x55, 0x41, 0x97, 0x9a, 0xea, 0xbe, 0xb5, 0x0d, 0x5f, 0xfe, 0x23, 0x6b, 0xdb, 0x69, 0x01,
	0x7e, 0x9b, 0xa2, 0xe8, 0xe2, 0x3e, 0x40, 0x63, 0xcf, 0xc2, 0x68, 0x5f, 0x8a, 0x6e, 0xf0, 0xd9,
	0x93, 0xbf, 0x6b, 0xaf, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x8c, 0xce, 0x0b, 0x10, 0x06, 0x07,
	0x00, 0x00,
}
