// Code generated by protoc-gen-go. DO NOT EDIT.
// source: code.xxxxxx.com/micro/proto/feedback/feedback.proto

/*
Package feedback is a generated protocol buffer package.

It is generated from these files:
	code.xxxxxx.com/micro/proto/feedback/feedback.proto

It has these top-level messages:
	Record
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	ListRequest
	ListResponse
*/
package feedback

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	Id      int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Phone   string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	Email   string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Record) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Record) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Record) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Record) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Record) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CreateRequest struct {
	Content string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Phone   string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Email   string `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CreateRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CreateResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ListResponse struct {
	Totoal  int64     `protobuf:"varint,1,opt,name=totoal" json:"totoal,omitempty"`
	Results []*Record `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListResponse) GetTotoal() int64 {
	if m != nil {
		return m.Totoal
	}
	return 0
}

func (m *ListResponse) GetResults() []*Record {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "feedback.Record")
	proto.RegisterType((*CreateRequest)(nil), "feedback.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "feedback.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "feedback.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "feedback.ReadResponse")
	proto.RegisterType((*ListRequest)(nil), "feedback.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "feedback.ListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Feedback service

type FeedbackClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
}

type feedbackClient struct {
	c           client.Client
	serviceName string
}

func NewFeedbackClient(serviceName string, c client.Client) FeedbackClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "feedback"
	}
	return &feedbackClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *feedbackClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Feedback.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feedbackClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Feedback.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *feedbackClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Feedback.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Feedback service

type FeedbackHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
}

func RegisterFeedbackHandler(s server.Server, hdlr FeedbackHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Feedback{hdlr}, opts...))
}

type Feedback struct {
	FeedbackHandler
}

func (h *Feedback) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.FeedbackHandler.Create(ctx, in, out)
}

func (h *Feedback) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.FeedbackHandler.Read(ctx, in, out)
}

func (h *Feedback) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.FeedbackHandler.List(ctx, in, out)
}

func init() {
	proto.RegisterFile("code.xxxxxx.com/micro/proto/feedback/feedback.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xbd, 0x4e, 0xc3, 0x30,
	0x18, 0x6c, 0x7e, 0x9a, 0x96, 0xaf, 0x3f, 0x42, 0x16, 0x14, 0xab, 0x12, 0x52, 0xe4, 0xa9, 0x62,
	0x48, 0xa5, 0x76, 0x80, 0x85, 0x09, 0x89, 0x89, 0xc9, 0x6f, 0xe0, 0x3a, 0x1f, 0x22, 0xa2, 0x89,
	0x8b, 0xe3, 0x3e, 0x1d, 0x2f, 0x87, 0x6a, 0x3b, 0xc5, 0x94, 0x6c, 0xb9, 0x3b, 0x9f, 0xcf, 0x77,
	0x0a, 0x6c, 0xa5, 0x2a, 0xb1, 0x10, 0xd2, 0x18, 0xa1, 0x0a, 0xa9, 0xea, 0x75, 0x5d, 0x49, 0xad,
	0xd6, 0x07, 0xad, 0x8c, 0x5a, 0xbf, 0x23, 0x96, 0x3b, 0x21, 0x3f, 0xcf, 0x1f, 0x85, 0xe5, 0xc9,
	0xb8, 0xc3, 0x4c, 0x43, 0xc6, 0x51, 0x2a, 0x5d, 0x92, 0x39, 0xc4, 0x55, 0x49, 0xa3, 0x3c, 0x5a,
	0x25, 0x3c, 0xae, 0x4a, 0x42, 0x61, 0x24, 0x55, 0x63, 0xb0, 0x31, 0x34, 0xce, 0xa3, 0xd5, 0x15,
	0xef, 0x20, 0x21, 0x90, 0x36, 0xa2, 0x46, 0x9a, 0x58, 0xda, 0x7e, 0x93, 0x1b, 0x18, 0x1e, 0x3e,
	0x54, 0x83, 0x34, 0xb5, 0xa4, 0x03, 0x27, 0x16, 0x6b, 0x51, 0xed, 0xe9, 0xd0, 0xb1, 0x16, 0xb0,
	0x0a, 0x66, 0x2f, 0x1a, 0x85, 0x41, 0x8e, 0x5f, 0x47, 0x6c, 0x4d, 0x18, 0x15, 0xf5, 0x47, 0xc5,
	0x7d, 0x51, 0x49, 0x6f, 0x54, 0x1a, 0x46, 0xe5, 0x30, 0xef, 0xa2, 0xda, 0x83, 0x6a, 0x5a, 0xbc,
	0xac, 0xc9, 0xee, 0x61, 0xc2, 0x51, 0x94, 0xdd, 0x53, 0x2e, 0xe5, 0x27, 0x98, 0x3a, 0xd9, 0xdb,
	0x57, 0x90, 0x69, 0xbb, 0x97, 0x3d, 0x33, 0xd9, 0x5c, 0x17, 0xe7, 0x69, 0xdd, 0x8e, 0xdc, 0xeb,
	0x6c, 0x06, 0x93, 0xb7, 0xaa, 0x35, 0xfe, 0x62, 0xc6, 0x61, 0xea, 0xa0, 0xbf, 0x68, 0x01, 0x99,
	0x51, 0x46, 0x89, 0xbd, 0x0f, 0xf3, 0x88, 0x3c, 0xc0, 0x48, 0x63, 0x7b, 0xdc, 0x9b, 0x96, 0xc6,
	0x79, 0xd2, 0x9b, 0xd0, 0x1d, 0xd8, 0x7c, 0x47, 0x30, 0x7e, 0xf5, 0x22, 0x79, 0x86, 0xcc, 0x55,
	0x25, 0x77, 0xbf, 0x8e, 0x3f, 0x3b, 0x2f, 0xe9, 0x7f, 0xc1, 0xbd, 0x86, 0x0d, 0xc8, 0x23, 0xa4,
	0xa7, 0xa2, 0xe4, 0x36, 0x8c, 0x3b, 0xef, 0xb2, 0x5c, 0x5c, 0xd2, 0xa1, 0xf1, 0x54, 0x2c, 0x34,
	0x06, 0xbd, 0x43, 0x63, 0xd8, 0x9f, 0x0d, 0x76, 0x99, 0xfd, 0x17, 0xb7, 0x3f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x66, 0xd3, 0x82, 0xe7, 0xc2, 0x02, 0x00, 0x00,
}
