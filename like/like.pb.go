// Code generated by protoc-gen-go. DO NOT EDIT.
// source: code.xxxxxx.com/micro/proto/like/like.proto

/*
Package like is a generated protocol buffer package.

It is generated from these files:
	code.xxxxxx.com/micro/proto/like/like.proto

It has these top-level messages:
	Record
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	DeleteRequest
	DeleteResponse
	ListRequest
	ListResponse
	StatsRequest
	StatsResponse
*/
package like

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Record struct {
	Id         int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId     int64  `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ObjectType string `protobuf:"bytes,3,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	ObjectId   string `protobuf:"bytes,4,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
	Object     string `protobuf:"bytes,5,opt,name=object" json:"object,omitempty"`
	CreatedAt  string `protobuf:"bytes,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Record) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Record) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Record) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *Record) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *Record) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *Record) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type CreateRequest struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ReadRequest struct {
	Id         int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId     int64  `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ObjectType string `protobuf:"bytes,3,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	ObjectId   string `protobuf:"bytes,4,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReadRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ReadRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *ReadRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

type ReadResponse struct {
	Record *Record `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type DeleteRequest struct {
	Id         int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId     int64  `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ObjectType string `protobuf:"bytes,3,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	ObjectId   string `protobuf:"bytes,4,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeleteRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *DeleteRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *DeleteRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

type DeleteResponse struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListRequest struct {
	Limit      int64  `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset     int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	UserId     int64  `protobuf:"varint,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ObjectType string `protobuf:"bytes,4,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	ObjectId   string `protobuf:"bytes,5,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *ListRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *ListRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

type ListResponse struct {
	Total   int32     `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	Results []*Record `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListResponse) GetResults() []*Record {
	if m != nil {
		return m.Results
	}
	return nil
}

type StatsRequest struct {
	UserId     int64  `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ObjectType string `protobuf:"bytes,2,opt,name=object_type,json=objectType" json:"object_type,omitempty"`
	ObjectId   string `protobuf:"bytes,3,opt,name=object_id,json=objectId" json:"object_id,omitempty"`
}

func (m *StatsRequest) Reset()                    { *m = StatsRequest{} }
func (m *StatsRequest) String() string            { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()               {}
func (*StatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *StatsRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *StatsRequest) GetObjectType() string {
	if m != nil {
		return m.ObjectType
	}
	return ""
}

func (m *StatsRequest) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

type StatsResponse struct {
	Total int32 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
}

func (m *StatsResponse) Reset()                    { *m = StatsResponse{} }
func (m *StatsResponse) String() string            { return proto.CompactTextString(m) }
func (*StatsResponse) ProtoMessage()               {}
func (*StatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *StatsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*Record)(nil), "like.Record")
	proto.RegisterType((*CreateRequest)(nil), "like.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "like.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "like.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "like.ReadResponse")
	proto.RegisterType((*DeleteRequest)(nil), "like.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "like.DeleteResponse")
	proto.RegisterType((*ListRequest)(nil), "like.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "like.ListResponse")
	proto.RegisterType((*StatsRequest)(nil), "like.StatsRequest")
	proto.RegisterType((*StatsResponse)(nil), "like.StatsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Like service

type LikeClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
	Stats(ctx context.Context, in *StatsRequest, opts ...client.CallOption) (*StatsResponse, error)
}

type likeClient struct {
	c           client.Client
	serviceName string
}

func NewLikeClient(serviceName string, c client.Client) LikeClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "like"
	}
	return &likeClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *likeClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Like.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *likeClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Like.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *likeClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Like.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *likeClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Like.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *likeClient) Stats(ctx context.Context, in *StatsRequest, opts ...client.CallOption) (*StatsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Like.Stats", in)
	out := new(StatsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Like service

type LikeHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
	Stats(context.Context, *StatsRequest, *StatsResponse) error
}

func RegisterLikeHandler(s server.Server, hdlr LikeHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Like{hdlr}, opts...))
}

type Like struct {
	LikeHandler
}

func (h *Like) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.LikeHandler.Create(ctx, in, out)
}

func (h *Like) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.LikeHandler.Read(ctx, in, out)
}

func (h *Like) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.LikeHandler.Delete(ctx, in, out)
}

func (h *Like) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.LikeHandler.List(ctx, in, out)
}

func (h *Like) Stats(ctx context.Context, in *StatsRequest, out *StatsResponse) error {
	return h.LikeHandler.Stats(ctx, in, out)
}

func init() { proto.RegisterFile("code.xxxxxx.com/micro/proto/like/like.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x94, 0xcd, 0x8a, 0x13, 0x41,
	0x10, 0xc7, 0x77, 0x3e, 0xd7, 0x54, 0x3e, 0xc0, 0xde, 0xa0, 0x43, 0x44, 0x1c, 0x1a, 0x95, 0x05,
	0x21, 0x81, 0x68, 0x1e, 0x40, 0xf4, 0xb2, 0x90, 0xd3, 0xe8, 0x3d, 0xcc, 0x4e, 0xd7, 0x42, 0xbb,
	0x13, 0x3b, 0x4e, 0x57, 0x84, 0x7d, 0x05, 0x8f, 0x3e, 0x84, 0xcf, 0x29, 0xd3, 0x1f, 0xeb, 0x4c,
	0xc4, 0xc1, 0xd3, 0x5e, 0xc2, 0x54, 0x55, 0x77, 0xff, 0x7f, 0xff, 0xea, 0xea, 0xc0, 0x9b, 0x4a,
	0x09, 0x5c, 0x96, 0x15, 0x51, 0xa9, 0x96, 0x95, 0xda, 0xaf, 0xf6, 0xb2, 0x6a, 0xd4, 0xea, 0xd0,
	0x28, 0x52, 0xab, 0x5a, 0xde, 0xa2, 0xf9, 0x59, 0x9a, 0x98, 0xc5, 0xed, 0x37, 0xff, 0x15, 0x40,
	0x5a, 0x60, 0xa5, 0x1a, 0xc1, 0x66, 0x10, 0x4a, 0x91, 0x05, 0x79, 0x70, 0x19, 0x15, 0xa1, 0x14,
	0xec, 0x29, 0x9c, 0x1f, 0x35, 0x36, 0x3b, 0x29, 0xb2, 0xd0, 0x24, 0xd3, 0x36, 0xbc, 0x12, 0xec,
	0x05, 0x8c, 0xd5, 0xf5, 0x17, 0xac, 0x68, 0x47, 0x77, 0x07, 0xcc, 0xa2, 0x3c, 0xb8, 0x1c, 0x15,
	0x60, 0x53, 0x9f, 0xef, 0x0e, 0xc8, 0x9e, 0xc1, 0xc8, 0x2d, 0x90, 0x22, 0x8b, 0x4d, 0xf9, 0x91,
	0x4d, 0x5c, 0x09, 0xf6, 0x04, 0x52, 0xfb, 0x9d, 0x25, 0xa6, 0xe2, 0x22, 0xf6, 0x1c, 0xa0, 0x6a,
	0xb0, 0x24, 0x14, 0xbb, 0x92, 0xb2, 0xd4, 0xd4, 0x46, 0x2e, 0xf3, 0x9e, 0xf8, 0x06, 0xa6, 0x1f,
	0x4c, 0x50, 0xe0, 0xb7, 0x23, 0x6a, 0x62, 0x2f, 0x21, 0x6d, 0x0c, 0xb8, 0x41, 0x1e, 0xaf, 0x27,
	0x4b, 0x63, 0xce, 0x9a, 0x29, 0x5c, 0x8d, 0xe7, 0x30, 0xf3, 0xdb, 0xf4, 0x41, 0x7d, 0xd5, 0x78,
	0x6a, 0x93, 0x13, 0x8c, 0x0b, 0x2c, 0x85, 0x3f, 0xf6, 0x61, 0xba, 0xc0, 0xdf, 0xc1, 0xc4, 0xaa,
	0x3a, 0xaa, 0xff, 0x73, 0xf3, 0x1d, 0xa6, 0x1f, 0xb1, 0xc6, 0x3f, 0x4d, 0x78, 0x20, 0xda, 0x1c,
	0x66, 0x5e, 0xf7, 0x1f, 0x5d, 0xfc, 0x19, 0xc0, 0x78, 0x2b, 0x35, 0x79, 0xb0, 0x39, 0x24, 0xb5,
	0xdc, 0x4b, 0x72, 0x4b, 0x6c, 0x60, 0xee, 0xfe, 0xe6, 0x46, 0x23, 0x79, 0x3a, 0x1b, 0x75, 0xb1,
	0xa3, 0x21, 0xec, 0x78, 0x18, 0x3b, 0x39, 0xc1, 0xde, 0xc2, 0xc4, 0x32, 0x39, 0xe8, 0x39, 0x24,
	0xa4, 0xa8, 0xac, 0x0d, 0x54, 0x52, 0xd8, 0x80, 0xbd, 0x86, 0xf3, 0x06, 0xf5, 0xb1, 0x26, 0x9d,
	0x85, 0x79, 0xf4, 0x57, 0xef, 0x7d, 0x91, 0x23, 0x4c, 0x3e, 0x51, 0x49, 0xda, 0x5b, 0xec, 0x40,
	0x07, 0x43, 0xd0, 0xe1, 0x30, 0x74, 0x74, 0x02, 0xfd, 0x0a, 0xa6, 0x4e, 0x66, 0x88, 0x7a, 0xfd,
	0x23, 0x84, 0x78, 0x2b, 0x6f, 0x91, 0x6d, 0x20, 0xb5, 0x13, 0xce, 0x2e, 0x2c, 0x77, 0xef, 0x99,
	0x2c, 0xe6, 0xfd, 0xa4, 0x3d, 0x93, 0x9f, 0xb1, 0x15, 0xc4, 0xed, 0x00, 0xb2, 0xc7, 0xde, 0xec,
	0xfd, 0x13, 0x58, 0xb0, 0x6e, 0xea, 0x7e, 0xc3, 0x06, 0x52, 0x3b, 0x03, 0x5e, 0xa7, 0x37, 0x89,
	0x5e, 0xa7, 0x3f, 0x26, 0x56, 0xa7, 0xbd, 0x03, 0xaf, 0xd3, 0x99, 0x11, 0xaf, 0xd3, 0xbd, 0x22,
	0x7e, 0xc6, 0xd6, 0x90, 0x18, 0xff, 0xcc, 0x95, 0xbb, 0x3d, 0x5f, 0x5c, 0xf4, 0x72, 0x7e, 0xcf,
	0x75, 0x6a, 0xfe, 0xd2, 0xde, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xc5, 0x0b, 0x88, 0x01,
	0x05, 0x00, 0x00,
}
